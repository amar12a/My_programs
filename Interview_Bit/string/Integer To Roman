char findBase(int n)
{
    
}
string Solution::intToRoman(int A) {
map<int,string> mp;
string result;
mp.insert(make_pair(1,"I"));
mp.insert(make_pair(4,"IV"));
mp.insert(make_pair(5,"V"));
mp.insert(make_pair(9,"IX"));
mp.insert(make_pair(10,"X"));
mp.insert(make_pair(40,"XL"));
mp.insert(make_pair(50,"L"));
mp.insert(make_pair(90,"XC"));
mp.insert(make_pair(100,"C"));
mp.insert(make_pair(400,"CD"));
mp.insert(make_pair(500,"D"));
mp.insert(make_pair(900,"CM"));
mp.insert(make_pair(1000,"M"));
int base;
string ch;
while(A)
{
    for(auto it = mp.begin(); it!=mp.end(); it++)
    {
        if(it->first > A)
        {
            break;
        }
        base = it->first;
        ch = it->second;
    }
    int times;
    times = A/base;
    A = A - (times * base);
    while(times--)
    {
        result+=ch;
    }
}
return result;


}

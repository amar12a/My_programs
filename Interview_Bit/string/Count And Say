string Solution::countAndSay(int n) {
    n--;
    string s="1";
    string s1="";
    unordered_multimap<char,int> mp;
    int l;
    char ch;
    int freq = 0;
    for(int i = 0; i < n; i++)
    {
        l = s.length();
        for(int j = 0; j < l;)
        {
            ch = s[j];
            freq = 0;
            while(ch == s[j] && j<l)
            {
                freq++;
                j++;
            } 
           // cout<<ch<<" "<<freq<<".. ";
            string st1(1,ch);
            string st2 = to_string(freq);
            s1 += (st2+st1);
            
           // mp.insert(make_pair(ch,freq));
        }
        //cout<<"-"<<s1<<"-- ";
        /*
        s="";
        for(auto it=mp.begin(); it!=mp.end(); it++)
        {
            cout<<to_string(it->second)<<" ";
            s+=to_string(it->second);
            string st(1,it->first);
            s+=st;
            cout<<st<<"** ";
        }
        cout<<" -"<<s<<"- ";
        mp.clear();*/
        s = s1;
        s1 ="";
    }
    return s;
}

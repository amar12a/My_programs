/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
int Solution::lPalin(ListNode* head) {
    ListNode* temp = head;
    int n = 0;
    int mid = 0;
    while(temp)
    {
        n++;
        temp = temp->next;
    }
    if(n == 0 || n == 1)
        return 1;
        
    if(n%2 == 0)
        mid = n/2;
    else
        mid = (n+1)/2;
    mid++;
    temp = head;
    int k =1;
    while(k!=(mid-1))
    {
        k++;
        temp = temp->next;
    }
    ListNode * midl = temp;
    ListNode* prev = NULL;
    ListNode* next = temp->next;
    temp = next;
    //cout<<temp->val<<"*";
    while(temp)
    {
        next = temp->next;
        temp->next = prev;
        prev = temp;
        temp = next;
    }
    midl->next = prev;
    temp = head;
    ListNode *temp2 = midl->next;
    k = 0;
    int f = 0;
    //cout<<mid<<"**";
    /*
    while(temp)
    {
        cout<<temp->val<<"/";
        temp = temp->next;
    }
    */
    mid = n/2;
    
    while(k!=mid)
    {
        //cout<<temp->val<<"-"<<temp2->val<<"/";
        if(temp->val != temp2->val)
        {
            f =1;
            break;
        }
        k++;
        temp = temp->next;
        temp2 = temp2->next;
    }
    if(f == 1)
        return 0;
    else
        return 1;
}
